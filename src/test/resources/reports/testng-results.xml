<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="9" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-07T14:39:16 EEST" name="All Test Suite" finished-at="2024-08-07T14:40:57 EEST" duration-ms="101235">
    <groups>
    </groups>
    <test started-at="2024-08-07T14:39:16 EEST" name="C:/Users/mpana/Desktop/Automation-Java-Web/Automation Java Web" finished-at="2024-08-07T14:40:57 EEST" duration-ms="101235">
      <class name="com.myp.gui.LoginTest">
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:39:30 EEST" name="setUpTest" finished-at="2024-08-07T14:39:31 EEST" duration-ms="1011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyAlreadyRegisteredUserCanSuccessfullyLogin()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:39:31 EEST" name="verifyAlreadyRegisteredUserCanSuccessfullyLogin" finished-at="2024-08-07T14:39:35 EEST" duration-ms="4063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAlreadyRegisteredUserCanSuccessfullyLogin -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:39:35 EEST" name="tearDownTest" finished-at="2024-08-07T14:39:35 EEST" duration-ms="110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAlreadyRegisteredUserCanSuccessfullyLogin status=SUCCESS method=LoginTest.verifyAlreadyRegisteredUserCanSuccessfullyLogin()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:39:35 EEST" name="setUpTest" finished-at="2024-08-07T14:39:36 EEST" duration-ms="887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongPassword()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:39:36 EEST" name="verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongPassword" finished-at="2024-08-07T14:39:39 EEST" duration-ms="3176" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Successful login!] but found [Ivalid password]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Successful login!] but found [Ivalid password]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.myp.POM.LoginPage.msgStatusAfterSubmitSuccessfulLogin(LoginPage.java:72)
at com.myp.gui.LoginTest.verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongPassword(LoginTest.java:75)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongPassword -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:39:39 EEST" name="tearDownTest" finished-at="2024-08-07T14:39:39 EEST" duration-ms="239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongPassword status=FAILURE method=LoginTest.verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongPassword()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:39:39 EEST" name="setUpTest" finished-at="2024-08-07T14:39:40 EEST" duration-ms="948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongUsername()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:39:40 EEST" name="verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongUsername" finished-at="2024-08-07T14:40:02 EEST" duration-ms="21576" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.name: usernameOrEmail' (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.name: usernameOrEmail' (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at com.myp.POM.CommonMethodsForPOM.typeTextInField(CommonMethodsForPOM.java:40)
at com.myp.POM.LoginPage.provideUserName(LoginPage.java:51)
at com.myp.gui.LoginTest.verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongUsername(LoginTest.java:90)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"*[name='usernameOrEmail']"}
  (Session info: chrome=127.0.6533.89)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [dac2aa9d5eaa6e10b5ff807cfedc2b5a, findElement {using=name, value=usernameOrEmail}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.89, chrome: {chromedriverVersion: 127.0.6533.99 (f31af5097d90..., userDataDir: C:\Users\mpana\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63585}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63585/devtoo..., se:cdpVersion: 127.0.6533.89, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: dac2aa9d5eaa6e10b5ff807cfedc2b5a
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy12.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 33 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongUsername -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:40:02 EEST" name="tearDownTest" finished-at="2024-08-07T14:40:02 EEST" duration-ms="182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongUsername status=FAILURE method=LoginTest.verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongUsername()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:40:02 EEST" name="setUpTest" finished-at="2024-08-07T14:40:03 EEST" duration-ms="975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyUserCanSuccessfullyLogout()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:40:03 EEST" name="verifyUserCanSuccessfullyLogout" finished-at="2024-08-07T14:40:16 EEST" duration-ms="13100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanSuccessfullyLogout -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:40:16 EEST" name="tearDownTest" finished-at="2024-08-07T14:40:16 EEST" duration-ms="107" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanSuccessfullyLogout status=SUCCESS method=LoginTest.verifyUserCanSuccessfullyLogout()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:40:16 EEST" name="setUpTest" finished-at="2024-08-07T14:40:17 EEST" duration-ms="944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyUnregisteredUserCannotLogin()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:40:17 EEST" name="verifyUnregisteredUserCannotLogin" finished-at="2024-08-07T14:40:20 EEST" duration-ms="2451" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Successful login!] but found [User not found]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Successful login!] but found [User not found]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.myp.POM.LoginPage.msgStatusAfterSubmitSuccessfulLogin(LoginPage.java:72)
at com.myp.gui.LoginTest.verifyUnregisteredUserCannotLogin(LoginTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnregisteredUserCannotLogin -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:40:20 EEST" name="tearDownTest" finished-at="2024-08-07T14:40:20 EEST" duration-ms="188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnregisteredUserCannotLogin status=FAILURE method=LoginTest.verifyUnregisteredUserCannotLogin()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:40:20 EEST" name="setUpTest" finished-at="2024-08-07T14:40:21 EEST" duration-ms="943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyUserCannotLoginWithEmptyCredentials()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:40:21 EEST" name="verifyUserCannotLoginWithEmptyCredentials" finished-at="2024-08-07T14:40:24 EEST" duration-ms="3557" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Successful login!] but found [UsernameOrEmail cannot be empty]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Successful login!] but found [UsernameOrEmail cannot be empty]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.myp.POM.LoginPage.msgStatusAfterSubmitSuccessfulLogin(LoginPage.java:72)
at com.myp.gui.LoginTest.verifyUserCannotLoginWithEmptyCredentials(LoginTest.java:200)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotLoginWithEmptyCredentials -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.LoginTest@77fbd92c]" started-at="2024-08-07T14:40:24 EEST" name="tearDownTest" finished-at="2024-08-07T14:40:25 EEST" duration-ms="202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCannotLoginWithEmptyCredentials status=FAILURE method=LoginTest.verifyUserCannotLoginWithEmptyCredentials()[pri:0, instance:com.myp.gui.LoginTest@77fbd92c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
      </class> <!-- com.myp.gui.LoginTest -->
      <class name="com.myp.gui.EndToEndTest">
        <test-method is-config="true" signature="setupTestSuite()[pri:0, instance:com.myp.gui.EndToEndTest@49139829]" started-at="2024-08-07T14:39:15 EEST" name="setupTestSuite" finished-at="2024-08-07T14:39:16 EEST" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestSuite -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.EndToEndTest@49139829]" started-at="2024-08-07T14:39:16 EEST" name="setUpTest" finished-at="2024-08-07T14:39:17 EEST" duration-ms="1257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="endToEndTest(java.io.File,java.lang.String)[pri:0, instance:com.myp.gui.EndToEndTest@49139829]" started-at="2024-08-07T14:39:17 EEST" name="endToEndTest" data-provider="endToEndTest" finished-at="2024-08-07T14:39:30 EEST" duration-ms="12714" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[src\test\resources\uploads\testUpload.jpg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Testing create post caption]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for url to contain "http://training.skillo-bg.com:4200/posts/all". Current url: "http://training.skillo-bg.com:4200/users/register" (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.89, chrome: {chromedriverVersion: 127.0.6533.99 (f31af5097d90..., userDataDir: C:\Users\mpana\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63485}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63485/devtoo..., se:cdpVersion: 127.0.6533.89, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c705912e71b7e727fbf96c891927abcd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for url to contain "http://training.skillo-bg.com:4200/posts/all". Current url: "http://training.skillo-bg.com:4200/users/register" (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.89, chrome: {chromedriverVersion: 127.0.6533.99 (f31af5097d90..., userDataDir: C:\Users\mpana\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63485}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63485/devtoo..., se:cdpVersion: 127.0.6533.89, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c705912e71b7e727fbf96c891927abcd
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at com.myp.POM.CommonMethodsForPOM.isUrlLoaded(CommonMethodsForPOM.java:52)
at com.myp.gui.EndToEndTest.endToEndTest(EndToEndTest.java:57)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endToEndTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.EndToEndTest@49139829]" started-at="2024-08-07T14:39:30 EEST" name="tearDownTest" finished-at="2024-08-07T14:39:30 EEST" duration-ms="194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=endToEndTest status=FAILURE method=EndToEndTest.endToEndTest(java.io.File,java.lang.String)[pri:0, instance:com.myp.gui.EndToEndTest@49139829] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="cleanFiles()[pri:0, instance:com.myp.gui.EndToEndTest@49139829]" started-at="2024-08-07T14:40:57 EEST" name="cleanFiles" finished-at="2024-08-07T14:40:57 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanFiles -->
      </class> <!-- com.myp.gui.EndToEndTest -->
      <class name="com.myp.gui.PostCommentDelete">
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.PostCommentDelete@72967906]" started-at="2024-08-07T14:40:25 EEST" name="setUpTest" finished-at="2024-08-07T14:40:26 EEST" duration-ms="943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyUserCanCreateAndCommentOnPost(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)[pri:0, instance:com.myp.gui.PostCommentDelete@72967906]" started-at="2024-08-07T14:40:26 EEST" name="verifyUserCanCreateAndCommentOnPost" data-provider="CommentPostDataProvider" finished-at="2024-08-07T14:40:31 EEST" duration-ms="5051" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[megamare]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ortoparisi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[megamare]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[src\test\resources\uploads\testUpload.jpg]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Testing create post caption]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[This is a test comment]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanCreateAndCommentOnPost -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.PostCommentDelete@72967906]" started-at="2024-08-07T14:40:31 EEST" name="tearDownTest" finished-at="2024-08-07T14:40:31 EEST" duration-ms="120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanCreateAndCommentOnPost status=SUCCESS method=PostCommentDelete.verifyUserCanCreateAndCommentOnPost(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)[pri:0, instance:com.myp.gui.PostCommentDelete@72967906] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.PostCommentDelete@72967906]" started-at="2024-08-07T14:40:31 EEST" name="setUpTest" finished-at="2024-08-07T14:40:32 EEST" duration-ms="895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyUserCanDeletePost(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)[pri:0, instance:com.myp.gui.PostCommentDelete@72967906]" started-at="2024-08-07T14:40:32 EEST" name="verifyUserCanDeletePost" data-provider="CommentPostDataProvider" finished-at="2024-08-07T14:40:35 EEST" depends-on-methods="com.myp.gui.PostCommentDelete.verifyUserCanCreateAndCommentOnPost" duration-ms="3498" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[megamare]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ortoparisi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[megamare]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[src\test\resources\uploads\testUpload.jpg]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Testing create post caption]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[This is a test comment]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanDeletePost -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.PostCommentDelete@72967906]" started-at="2024-08-07T14:40:35 EEST" name="tearDownTest" finished-at="2024-08-07T14:40:35 EEST" duration-ms="141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanDeletePost status=SUCCESS method=PostCommentDelete.verifyUserCanDeletePost(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)[pri:0, instance:com.myp.gui.PostCommentDelete@72967906] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
      </class> <!-- com.myp.gui.PostCommentDelete -->
      <class name="com.myp.gui.RegistrationTest">
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf]" started-at="2024-08-07T14:40:40 EEST" name="setUpTest" finished-at="2024-08-07T14:40:41 EEST" duration-ms="987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyUserCanRegisterWithValidData()[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf]" started-at="2024-08-07T14:40:41 EEST" name="verifyUserCanRegisterWithValidData" finished-at="2024-08-07T14:40:44 EEST" duration-ms="3820" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanRegisterWithValidData -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf]" started-at="2024-08-07T14:40:44 EEST" name="tearDownTest" finished-at="2024-08-07T14:40:44 EEST" duration-ms="109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanRegisterWithValidData status=SUCCESS method=RegistrationTest.verifyUserCanRegisterWithValidData()[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf]" started-at="2024-08-07T14:40:44 EEST" name="setUpTest" finished-at="2024-08-07T14:40:45 EEST" duration-ms="883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyUserCannotRegisterWithInvalidData()[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf]" started-at="2024-08-07T14:40:45 EEST" name="verifyUserCannotRegisterWithInvalidData" finished-at="2024-08-07T14:40:48 EEST" duration-ms="2520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotRegisterWithInvalidData -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf]" started-at="2024-08-07T14:40:48 EEST" name="tearDownTest" finished-at="2024-08-07T14:40:48 EEST" duration-ms="116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCannotRegisterWithInvalidData status=SUCCESS method=RegistrationTest.verifyUserCannotRegisterWithInvalidData()[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf]" started-at="2024-08-07T14:40:48 EEST" name="setUpTest" finished-at="2024-08-07T14:40:49 EEST" duration-ms="891" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyAlreadyRegisteredUserCanSuccessfullyLogin()[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf]" started-at="2024-08-07T14:40:49 EEST" name="verifyAlreadyRegisteredUserCanSuccessfullyLogin" finished-at="2024-08-07T14:40:52 EEST" duration-ms="3227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAlreadyRegisteredUserCanSuccessfullyLogin -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf]" started-at="2024-08-07T14:40:52 EEST" name="tearDownTest" finished-at="2024-08-07T14:40:52 EEST" duration-ms="111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAlreadyRegisteredUserCanSuccessfullyLogin status=SUCCESS method=RegistrationTest.verifyAlreadyRegisteredUserCanSuccessfullyLogin()[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf]" started-at="2024-08-07T14:40:52 EEST" name="setUpTest" finished-at="2024-08-07T14:40:53 EEST" duration-ms="894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyAlreadyRegisteredUserCanSuccessfullyLoginAndNavigateToEditProfile()[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf]" started-at="2024-08-07T14:40:53 EEST" name="verifyAlreadyRegisteredUserCanSuccessfullyLoginAndNavigateToEditProfile" finished-at="2024-08-07T14:40:57 EEST" duration-ms="3736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAlreadyRegisteredUserCanSuccessfullyLoginAndNavigateToEditProfile -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf]" started-at="2024-08-07T14:40:57 EEST" name="tearDownTest" finished-at="2024-08-07T14:40:57 EEST" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAlreadyRegisteredUserCanSuccessfullyLoginAndNavigateToEditProfile status=SUCCESS method=RegistrationTest.verifyAlreadyRegisteredUserCanSuccessfullyLoginAndNavigateToEditProfile()[pri:0, instance:com.myp.gui.RegistrationTest@2f9f7dcf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
      </class> <!-- com.myp.gui.RegistrationTest -->
      <class name="com.myp.gui.PostTest">
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.PostTest@5b8dfcc1]" started-at="2024-08-07T14:40:35 EEST" name="setUpTest" finished-at="2024-08-07T14:40:36 EEST" duration-ms="957" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyPostModalDetails()[pri:0, instance:com.myp.gui.PostTest@5b8dfcc1]" started-at="2024-08-07T14:40:36 EEST" name="verifyPostModalDetails" finished-at="2024-08-07T14:40:39 EEST" duration-ms="3152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPostModalDetails -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.PostTest@5b8dfcc1]" started-at="2024-08-07T14:40:39 EEST" name="tearDownTest" finished-at="2024-08-07T14:40:40 EEST" duration-ms="179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPostModalDetails status=SUCCESS method=PostTest.verifyPostModalDetails()[pri:0, instance:com.myp.gui.PostTest@5b8dfcc1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
      </class> <!-- com.myp.gui.PostTest -->
    </test> <!-- C:/Users/mpana/Desktop/Automation-Java-Web/Automation Java Web -->
  </suite> <!-- All Test Suite -->
</testng-results>
