<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-19T11:58:12 EEST" name="All Test Suite" finished-at="2024-07-19T11:59:36 EEST" duration-ms="83659">
    <groups>
    </groups>
    <test started-at="2024-07-19T11:58:12 EEST" name="C:/CODE/SK_AU_14/v5/SKAU14TAF" finished-at="2024-07-19T11:59:36 EEST" duration-ms="83659">
      <class name="com.myp.gui.LoginTest">
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.LoginTest@49139829]" started-at="2024-07-19T11:58:24 EEST" name="setUpTest" finished-at="2024-07-19T11:58:24 EEST" duration-ms="563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyAlreadyRegisteredUserCanSuccessfullyLogin()[pri:0, instance:com.myp.gui.LoginTest@49139829]" started-at="2024-07-19T11:58:24 EEST" name="verifyAlreadyRegisteredUserCanSuccessfullyLogin" finished-at="2024-07-19T11:58:31 EEST" duration-ms="6762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAlreadyRegisteredUserCanSuccessfullyLogin -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.LoginTest@49139829]" started-at="2024-07-19T11:58:31 EEST" name="tearDownTest" finished-at="2024-07-19T11:58:31 EEST" duration-ms="94" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAlreadyRegisteredUserCanSuccessfullyLogin status=SUCCESS method=LoginTest.verifyAlreadyRegisteredUserCanSuccessfullyLogin()[pri:0, instance:com.myp.gui.LoginTest@49139829] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.LoginTest@49139829]" started-at="2024-07-19T11:58:31 EEST" name="setUpTest" finished-at="2024-07-19T11:58:32 EEST" duration-ms="623" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongPassword()[pri:0, instance:com.myp.gui.LoginTest@49139829]" started-at="2024-07-19T11:58:32 EEST" name="verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongPassword" finished-at="2024-07-19T11:58:40 EEST" duration-ms="8251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongPassword -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.LoginTest@49139829]" started-at="2024-07-19T11:58:40 EEST" name="tearDownTest" finished-at="2024-07-19T11:58:40 EEST" duration-ms="99" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongPassword status=SUCCESS method=LoginTest.verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongPassword()[pri:0, instance:com.myp.gui.LoginTest@49139829] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.LoginTest@49139829]" started-at="2024-07-19T11:58:40 EEST" name="setUpTest" finished-at="2024-07-19T11:58:41 EEST" duration-ms="628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongUsername()[pri:0, instance:com.myp.gui.LoginTest@49139829]" started-at="2024-07-19T11:58:41 EEST" name="verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongUsername" finished-at="2024-07-19T11:58:50 EEST" duration-ms="9001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongUsername -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.LoginTest@49139829]" started-at="2024-07-19T11:58:50 EEST" name="tearDownTest" finished-at="2024-07-19T11:58:50 EEST" duration-ms="96" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongUsername status=SUCCESS method=LoginTest.verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithWrongUsername()[pri:0, instance:com.myp.gui.LoginTest@49139829] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.LoginTest@49139829]" started-at="2024-07-19T11:58:50 EEST" name="setUpTest" finished-at="2024-07-19T11:58:50 EEST" duration-ms="564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithNotProvidedCredentials()[pri:0, instance:com.myp.gui.LoginTest@49139829]" started-at="2024-07-19T11:58:50 EEST" name="verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithNotProvidedCredentials" finished-at="2024-07-19T11:58:58 EEST" duration-ms="7690" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithNotProvidedCredentials -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.LoginTest@49139829]" started-at="2024-07-19T11:58:58 EEST" name="tearDownTest" finished-at="2024-07-19T11:58:58 EEST" duration-ms="92" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithNotProvidedCredentials status=SUCCESS method=LoginTest.verifyAlreadyRegisteredUserCanNotSuccessfullyLoginWithNotProvidedCredentials()[pri:0, instance:com.myp.gui.LoginTest@49139829] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
      </class> <!-- com.myp.gui.LoginTest -->
      <class name="com.myp.gui.EndToEndTest">
        <test-method is-config="true" signature="setupTestSuite()[pri:0, instance:com.myp.gui.EndToEndTest@1623b78d]" started-at="2024-07-19T11:58:12 EEST" name="setupTestSuite" finished-at="2024-07-19T11:58:12 EEST" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestSuite -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.EndToEndTest@1623b78d]" started-at="2024-07-19T11:58:12 EEST" name="setUpTest" finished-at="2024-07-19T11:58:13 EEST" duration-ms="888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="endToEndTest()[pri:0, instance:com.myp.gui.EndToEndTest@1623b78d]" started-at="2024-07-19T11:58:13 EEST" name="endToEndTest" finished-at="2024-07-19T11:58:24 EEST" duration-ms="10267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endToEndTest -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.EndToEndTest@1623b78d]" started-at="2024-07-19T11:58:24 EEST" name="tearDownTest" finished-at="2024-07-19T11:58:24 EEST" duration-ms="100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=endToEndTest status=SUCCESS method=EndToEndTest.endToEndTest()[pri:0, instance:com.myp.gui.EndToEndTest@1623b78d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="cleanFiles()[pri:0, instance:com.myp.gui.EndToEndTest@1623b78d]" started-at="2024-07-19T11:59:36 EEST" name="cleanFiles" finished-at="2024-07-19T11:59:36 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanFiles -->
      </class> <!-- com.myp.gui.EndToEndTest -->
      <class name="com.myp.gui.RegistrationTest">
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.RegistrationTest@6069db50]" started-at="2024-07-19T11:59:10 EEST" name="setUpTest" finished-at="2024-07-19T11:59:11 EEST" duration-ms="636" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyUserCanRegisterWithValidData()[pri:0, instance:com.myp.gui.RegistrationTest@6069db50]" started-at="2024-07-19T11:59:11 EEST" name="verifyUserCanRegisterWithValidData" finished-at="2024-07-19T11:59:29 EEST" duration-ms="17797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanRegisterWithValidData -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.RegistrationTest@6069db50]" started-at="2024-07-19T11:59:29 EEST" name="tearDownTest" finished-at="2024-07-19T11:59:29 EEST" duration-ms="94" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanRegisterWithValidData status=SUCCESS method=RegistrationTest.verifyUserCanRegisterWithValidData()[pri:0, instance:com.myp.gui.RegistrationTest@6069db50] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.RegistrationTest@6069db50]" started-at="2024-07-19T11:59:29 EEST" name="setUpTest" finished-at="2024-07-19T11:59:29 EEST" duration-ms="577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyUserCanNotRegisterWithINValidData()[pri:0, instance:com.myp.gui.RegistrationTest@6069db50]" started-at="2024-07-19T11:59:29 EEST" name="verifyUserCanNotRegisterWithINValidData" finished-at="2024-07-19T11:59:36 EEST" duration-ms="6710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanNotRegisterWithINValidData -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.RegistrationTest@6069db50]" started-at="2024-07-19T11:59:36 EEST" name="tearDownTest" finished-at="2024-07-19T11:59:36 EEST" duration-ms="88" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanNotRegisterWithINValidData status=SUCCESS method=RegistrationTest.verifyUserCanNotRegisterWithINValidData()[pri:0, instance:com.myp.gui.RegistrationTest@6069db50] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
      </class> <!-- com.myp.gui.RegistrationTest -->
      <class name="com.myp.gui.PostTest">
        <test-method is-config="true" signature="setUpTest()[pri:0, instance:com.myp.gui.PostTest@9597028]" started-at="2024-07-19T11:58:58 EEST" name="setUpTest" finished-at="2024-07-19T11:58:59 EEST" duration-ms="548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method signature="verifyUserCanCreateNewPostAndDeleteIt(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)[pri:0, instance:com.myp.gui.PostTest@9597028]" started-at="2024-07-19T11:58:59 EEST" name="verifyUserCanCreateNewPostAndDeleteIt" data-provider="PostTestDataProvider" finished-at="2024-07-19T11:59:10 EEST" duration-ms="11206" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[testingDemos]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testing]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[testingDemos]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[src\test\resources\uploads\testUpload.jpg]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Testing create post caption]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument: File not found : C:\Users\mpana\Desktop\Automation-Java-Web\Automation Java Web\src\test\resources\uploads\testUpload.jpg
  (Session info: chrome=126.0.6478.127)
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [faf2b6fc38511d631bc5ada6d75e86dc, sendKeysToElement {value=[Ljava.lang.CharSequence;@3bbf6abe, id=f.50D76C61A7340F69F6AE3358F3C5E6F0.d.3A611412A62BF149AFF57BE084F0D06C.e.47}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.127, chrome: {chromedriverVersion: 126.0.6478.182 (5b5d8292ddf..., userDataDir: C:\Users\mpana\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62178}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62178/devtoo..., se:cdpVersion: 126.0.6478.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (faf2b6fc38511d631bc5ada6d75e86dc)] -> css selector: .file[type='file']]
Session ID: faf2b6fc38511d631bc5ada6d75e86dc]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument: File not found : C:\Users\mpana\Desktop\Automation-Java-Web\Automation Java Web\src\test\resources\uploads\testUpload.jpg
  (Session info: chrome=126.0.6478.127)
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [faf2b6fc38511d631bc5ada6d75e86dc, sendKeysToElement {value=[Ljava.lang.CharSequence;@3bbf6abe, id=f.50D76C61A7340F69F6AE3358F3C5E6F0.d.3A611412A62BF149AFF57BE084F0D06C.e.47}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.127, chrome: {chromedriverVersion: 126.0.6478.182 (5b5d8292ddf..., userDataDir: C:\Users\mpana\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62178}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62178/devtoo..., se:cdpVersion: 126.0.6478.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (faf2b6fc38511d631bc5ada6d75e86dc)] -> css selector: .file[type='file']]
Session ID: faf2b6fc38511d631bc5ada6d75e86dc
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:110)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy12.sendKeys(Unknown Source)
at com.myp.POM.PostPage.uploadPicture(PostPage.java:53)
at com.myp.gui.PostTest.verifyUserCanCreateNewPostAndDeleteIt(PostTest.java:59)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanCreateNewPostAndDeleteIt -->
        <test-method is-config="true" signature="tearDownTest(org.testng.ITestResult)[pri:0, instance:com.myp.gui.PostTest@9597028]" started-at="2024-07-19T11:59:10 EEST" name="tearDownTest" finished-at="2024-07-19T11:59:10 EEST" duration-ms="234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanCreateNewPostAndDeleteIt status=FAILURE method=PostTest.verifyUserCanCreateNewPostAndDeleteIt(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)[pri:0, instance:com.myp.gui.PostTest@9597028] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTest -->
      </class> <!-- com.myp.gui.PostTest -->
    </test> <!-- C:/CODE/SK_AU_14/v5/SKAU14TAF -->
  </suite> <!-- All Test Suite -->
</testng-results>
